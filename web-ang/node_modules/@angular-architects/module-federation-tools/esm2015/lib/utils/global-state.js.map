{"version":3,"file":"global-state.js","sourceRoot":"","sources":["../../../../../../libs/mf-tools/src/lib/utils/global-state.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,gBAAgB,GAAG,6CAA6C,CAAC;AAE9E,SAAS,cAAc;IACnB,MAAM,WAAW,GAAI,MAA+C,CAAC;IACrE,WAAW,CAAC,gBAAgB,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,IAAK,EAAmB,CAAC;IACtF,OAAO,WAAW,CAAC,gBAAgB,CAAC,CAAC;AACzC,CAAC;AAID,MAAM,UAAU,mBAAmB,CAC/B,QAAgC;IAEhC,MAAM,WAAW,GAAG,cAAc,EAAK,CAAC;IACxC,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AAC1D,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAI,KAAQ;IAC3C,OAAO,MAAM,CAAC,MAAM,CAChB,cAAc,EAAK,EACnB,KAAK,CACR,CAAC;AACN,CAAC","sourcesContent":["export const packageNamespace = '@angular-architects/module-federation-tools';\r\n\r\nfunction getGlobalState<T>(): T {\r\n    const globalState = (window as unknown as { [packageNamespace]: T });\r\n    globalState[packageNamespace] = globalState[packageNamespace] || ({} as unknown as T);\r\n    return globalState[packageNamespace];\r\n}\r\n\r\nexport function getGlobalStateSlice<T>(): T;\r\nexport function getGlobalStateSlice<T, R>(selector: (globalState: T) => R): R;\r\nexport function getGlobalStateSlice<T, R>(\r\n    selector?: (globalState: T) => R\r\n): R | T {\r\n    const globalState = getGlobalState<T>();\r\n    return selector ? selector(globalState) : globalState;\r\n}\r\n\r\nexport function setGlobalStateSlice<T>(slice: T): T {\r\n    return Object.assign(\r\n        getGlobalState<T>(),\r\n        slice\r\n    );\r\n}\r\n"]}